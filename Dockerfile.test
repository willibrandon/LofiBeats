FROM mcr.microsoft.com/dotnet/sdk:9.0

# Install OpenAL and PulseAudio with additional debugging tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libopenal1 \
        libopenal-data \
        alsa-utils \
        pulseaudio \
        pulseaudio-utils \
        pavucontrol \
        libasound2-plugins \
        alsa-oss \
        strace \
        openal-info && \
    ldconfig && \
    rm -rf /var/lib/apt/lists/*

ENV DOTNET_SKIP_WORKLOAD_INSTALLATION=true
ENV DOTNET_SKIP_WORKLOAD_MANIFEST_UPDATE=true
ENV DOTNET_CLI_DO_NOT_FETCH_FEEDS=true
ENV MSBuildEnableWorkloadResolver=false

# Configure PulseAudio for system mode
RUN mkdir -p /etc/pulse && \
    echo "load-module module-native-protocol-unix auth-anonymous=1\n\
load-module module-native-protocol-tcp auth-anonymous=1\n\
load-module module-null-sink sink_name=DummyOutput channels=2 channel_map=front-left,front-right rate=44100 format=float32le\n\
load-module module-always-sink\n\
set-default-sink DummyOutput" > /etc/pulse/system.pa && \
    echo "daemonize = no\n\
system-instance = yes\n\
exit-idle-time = -1\n\
allow-module-loading = no\n\
allow-exit = no\n\
enable-shm = yes\n\
enable-memfd = yes\n\
flat-volumes = no\n\
default-sample-format = float32le\n\
default-sample-rate = 44100\n\
default-sample-channels = 2\n\
default-channel-map = front-left,front-right" > /etc/pulse/daemon.conf

# Configure OpenAL to use PulseAudio
RUN mkdir -p /etc/openal && \
    echo "drivers=pulse\n\
[pulse]\n\
allow-moves=true\n\
default=true\n\
channels=stereo\n\
[general]\n\
channels=stereo\n\
frequency=44100\n\
samples=4096\n\
debug-level=4\n\
disable-denormals=true\n\
cf_level=2\n\
rt-prio=0\n\
period_size=1024\n\
periods=4" > /etc/openal/alsoft.conf

# Configure ALSA
RUN echo "pcm.!default {\n\
    type pulse\n\
}\n\
\n\
ctl.!default {\n\
    type pulse\n\
}" > /etc/asound.conf

# Create entrypoint script with debug info
RUN echo '#!/bin/bash\n\
echo "Starting PulseAudio in system mode (root) ..."\n\
pulseaudio --system --daemonize=no --exit-idle-time=-1 --disallow-module-loading -v 2>&1 | grep -v "protocol-native.c\|sink-input.c\|module-null-sink.c" &\n\
\n\
sleep 2\n\
\n\
# Show audio debug info\n\
echo "=== PulseAudio Status ==="\n\
pactl info || true\n\
echo "=== PulseAudio Sinks (Detailed) ==="\n\
pactl list sinks || true\n\
pactl list short || true\n\
\n\
echo "=== ALSA Status ==="\n\
aplay -l || true\n\
cat /proc/asound/cards || true\n\
\n\
echo "=== OpenAL Info ==="\n\
openal-info || true\n\
\n\
# Set environment variables for OpenAL\n\
export ALSOFT_DRIVERS=pulse\n\
export ALSOFT_LOGLEVEL=2\n\
export ALSOFT_LOGFILE=/tmp/openal.log\n\
\n\
# Run the actual command\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

WORKDIR /app

# Copy project files
COPY Directory.Packages.props .
COPY *.sln .
COPY src/LofiBeats.Core/*.csproj src/LofiBeats.Core/
COPY src/LofiBeats.Core.PluginApi/*.csproj src/LofiBeats.Core.PluginApi/
COPY src/LofiBeats.Service/*.csproj src/LofiBeats.Service/
COPY src/LofiBeats.Cli/*.csproj src/LofiBeats.Cli/
COPY tests/LofiBeats.Tests/*.csproj tests/LofiBeats.Tests/

# Restore dependencies
RUN dotnet restore

# Copy the rest of the source code
COPY . .

# Build the solution
RUN dotnet build --no-restore

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD ["dotnet", "test", "--logger", "console;verbosity=detailed"] 