<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net9.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		
		<!-- .NET Tool Configuration -->
		<PackAsTool>true</PackAsTool>
		<ToolCommandName>lofi</ToolCommandName>
		<PackageOutputPath>./nupkg</PackageOutputPath>
		<Version>1.0.0</Version>
		<Authors>LofiBeats Team</Authors>
		<Description>A CLI tool for generating and playing lofi beats with real-time effects.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/yourusername/LofiBeats</PackageProjectUrl>
		<RepositoryUrl>https://github.com/yourusername/LofiBeats</RepositoryUrl>
		<PackageTags>music;audio;lofi;beats;cli</PackageTags>
	</PropertyGroup>

	<!-- Pre-build cleanup for Visual Studio (SAFE VERSION - NO RECURSION!) -->
	<Target Name="CleanupService" BeforeTargets="PreBuildEvent" Condition="'$(OS)' == 'Windows_NT'">
		<Message Text="🧹 Cleaning up any running services..." Importance="high" />
		<Exec Command="pwsh -NoProfile -NonInteractive -Command &quot;&amp; { Get-Process -Name dotnet | Where-Object {$_.MainWindowTitle -eq '' -and $_.CommandLine -like '*LofiBeats.Service.dll*'} | Stop-Process -Force }&quot;" IgnoreExitCode="true" />
	</Target>

	<Target Name="CleanupServiceUnix" BeforeTargets="PreBuildEvent" Condition="'$(OS)' != 'Windows_NT'">
		<Message Text="🧹 Cleaning up any running services..." Importance="high" />
		<Exec Command="pkill -f 'dotnet.*LofiBeats.Service.dll' || true" IgnoreExitCode="true" />
	</Target>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting" />
		<PackageReference Include="Microsoft.Extensions.Logging" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" />
		<PackageReference Include="System.CommandLine" />
		<PackageReference Include="System.Management" />
		<PackageReference Include="Polly" />
		<ProjectReference Include="..\LofiBeats.Core\LofiBeats.Core.csproj" />
	</ItemGroup>

	<ItemGroup>
		<None Include="appsettings.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Pack>false</Pack>
		</None>
	</ItemGroup>

	<Target Name="CopyServiceSettings" BeforeTargets="Build">
		<Copy SourceFiles="..\LofiBeats.Service\appsettings.json" DestinationFiles="$(OutDir)service.appsettings.json" />
		<Copy SourceFiles="..\LofiBeats.Service\appsettings.Development.json" DestinationFiles="$(OutDir)service.appsettings.Development.json" Condition="Exists('..\LofiBeats.Service\appsettings.Development.json')" />
	</Target>

	<Target Name="SetPackageFiles" BeforeTargets="GenerateNuspec">
		<ItemGroup>
			<None Include="$(OutDir)appsettings.json" Pack="true" PackagePath="tools/$(TargetFramework)/any/appsettings.json" />
			<None Include="$(OutDir)service.appsettings.json" Pack="true" PackagePath="tools/$(TargetFramework)/any/service.appsettings.json" />
			<None Include="$(OutDir)service.appsettings.Development.json" Pack="true" PackagePath="tools/$(TargetFramework)/any/service.appsettings.Development.json" Condition="Exists('$(OutDir)service.appsettings.Development.json')" />
		</ItemGroup>
	</Target>

</Project>
