<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net9.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<RuntimeIdentifiers>win-x64;linux-x64;linux-arm64;osx-x64</RuntimeIdentifiers>
		<PublishSingleFile>false</PublishSingleFile>
		<SelfContained>false</SelfContained>
		
		<!-- .NET Tool Configuration -->
		<PackAsTool>true</PackAsTool>
		<ToolCommandName>lofi</ToolCommandName>
		<PackageOutputPath>./nupkg</PackageOutputPath>
		<Version>0.1.0</Version>
		<Authors>willibrandon</Authors>
		<Description>A CLI tool for generating and playing lofi beats with real-time effects.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/willibrandon/LofiBeats</PackageProjectUrl>
		<RepositoryUrl>https://github.com/willibrandon/LofiBeats</RepositoryUrl>
		<PackageTags>music;audio;lofi;beats;cli;cross-platform;dotnet;dsp;effects</PackageTags>
		
		<!-- Content handling -->
		<EnableDefaultItems>false</EnableDefaultItems>
		<EnableDefaultNoneItems>false</EnableDefaultNoneItems>
		<EnableDefaultCompileItems>true</EnableDefaultCompileItems>
	</PropertyGroup>

	<PropertyGroup Condition="'$(PublishConfiguration)' == 'true'">
		<PublishSingleFile>true</PublishSingleFile>
		<SelfContained>true</SelfContained>
		<IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
		<EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
		<PublishReadyToRun>true</PublishReadyToRun>
	</PropertyGroup>

	<!-- Pre-build cleanup for Visual Studio -->
	<Target Name="CleanupService" BeforeTargets="PreBuildEvent" Condition="'$(OS)' == 'Windows_NT'">
		<Message Text="🧹 Cleaning up any running services..." Importance="high" />
		<Exec Command="pwsh -NoProfile -NonInteractive -Command &quot;&amp; { Get-Process -Name dotnet | Where-Object {$_.MainWindowTitle -eq '' -and $_.CommandLine -like '*LofiBeats.Service.dll*'} | Stop-Process -Force }&quot;" IgnoreExitCode="true" />
	</Target>

	<Target Name="CleanupServiceUnix" BeforeTargets="PreBuildEvent" Condition="'$(OS)' != 'Windows_NT'">
		<Message Text="🧹 Cleaning up any running services..." Importance="high" />
		<Exec Command="pkill -f 'dotnet.*LofiBeats.Service.dll' || true" IgnoreExitCode="true" />
	</Target>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting" />
		<PackageReference Include="Microsoft.Extensions.Logging" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" />
		<PackageReference Include="System.CommandLine" />
		<PackageReference Include="System.Management" />
		<PackageReference Include="Polly" />
		<PackageReference Include="Polly.Extensions.Http" />
		<ProjectReference Include="..\LofiBeats.Core\LofiBeats.Core.csproj" />
	</ItemGroup>

	<!-- Explicitly include source files -->
	<ItemGroup>
		<Compile Include="**/*.cs" Exclude="obj/**/*.cs" />
	</ItemGroup>

	<!-- Package content -->
	<ItemGroup>
		<None Include="../../README.md" Pack="true" PackagePath="\" />
		<None Include="appsettings.json" Pack="true" PackagePath="tools/$(TargetFramework)/any/appsettings.json" />
		<None Include="..\LofiBeats.Service\appsettings.json" Pack="true" PackagePath="tools/$(TargetFramework)/any/service.appsettings.json" />
		<None Include="..\LofiBeats.Service\appsettings.Development.json" 
			  Pack="true"
			  PackagePath="tools/$(TargetFramework)/any/service.appsettings.Development.json" 
			  Condition="Exists('..\LofiBeats.Service\appsettings.Development.json')" />
	</ItemGroup>

	<!-- Exclude default items -->
	<ItemGroup>
		<None Remove="Properties\launchSettings.json" />
		<Content Remove="Properties\launchSettings.json" />
	</ItemGroup>

	<Target Name="SetToolContent" BeforeTargets="GenerateNuspec">
		<ItemGroup>
			<_ToolContent Include="$(OutDir)appsettings.json">
				<PackagePath>tools/$(TargetFramework)/any/appsettings.json</PackagePath>
			</_ToolContent>
			<_ToolContent Include="$(OutDir)service.appsettings.json">
				<PackagePath>tools/$(TargetFramework)/any/service.appsettings.json</PackagePath>
			</_ToolContent>
			<_ToolContent Include="$(OutDir)service.appsettings.Development.json" 
						 Condition="Exists('$(OutDir)service.appsettings.Development.json')">
				<PackagePath>tools/$(TargetFramework)/any/service.appsettings.Development.json</PackagePath>
			</_ToolContent>
			
			<None Include="@(_ToolContent)" Pack="true" />
		</ItemGroup>
	</Target>

</Project>
